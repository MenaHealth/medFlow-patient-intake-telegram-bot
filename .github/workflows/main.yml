name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            cd medFlow-patient-intake-telegram-bot
            git pull
            nvm install 16.15.1
            nvm use 16.15.1
            # Append to .env only if variables are missing
            grep -qxF "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" .env || echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
            grep -qxF "PATIENT_FORM_BASE_URL=${{ secrets.PATIENT_FORM_BASE_URL }}" .env || echo "PATIENT_FORM_BASE_URL=${{ secrets.PATIENT_FORM_BASE_URL }}" >> .env
            npm install
            # Stop and delete any existing bot instances
            pm2 stop telegram-bot || true
            pm2 delete telegram-bot || true
            # Start the bot with a unique name
            UNIQUE_NAME="telegram-bot-$(date +%s)"
            pm2 start npm --name "$UNIQUE_NAME" -- run dev
            # Save the pm2 process list for auto-restart on reboot
            pm2 save
            # Set up log rotation
            pm2 install pm2-logrotate
            pm2 set pm2-logrotate:max_size 10M
            pm2 set pm2-logrotate:retain 5
            # Monitor PM2 processes
            pm2 monit